#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.13
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Tomlrb
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     2,    53,    11,    24,    12,    24,    64,    18,    13,    19,
    65,    33,     8,    30,    31,    10,    27,    22,    16,    22,
    47,    48,    49,    50,    46,    43,    42,    44,    45,    36,
    56,    57,    10,    47,    48,    49,    50,    46,    43,    42,
    44,    45,    36,    60,    26,    10,    47,    48,    49,    50,
    46,    43,    42,    44,    45,    36,    60,    25,    10,    47,
    48,    49,    50,    46,    43,    42,    44,    45,    36,    14,
    28,    10,    47,    48,    49,    50,    46,    43,    42,    44,
    45,    36,    20,   nil,    10,    47,    48,    49,    50,    46,
    43,    42,    44,    45,    36,   nil,    18,    10,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16 ]

racc_action_check = [
     1,    30,     1,    57,     1,     9,    61,     7,     1,     7,
    61,    23,     1,    17,    17,     1,    13,    57,     7,     9,
    25,    25,    25,    25,    25,    25,    25,    25,    25,    25,
    32,    32,    25,    65,    65,    65,    65,    65,    65,    65,
    65,    65,    65,    65,    12,    65,    35,    35,    35,    35,
    35,    35,    35,    35,    35,    35,    35,    11,    35,    33,
    33,    33,    33,    33,    33,    33,    33,    33,    33,     2,
    16,    33,    26,    26,    26,    26,    26,    26,    26,    26,
    26,    26,     8,   nil,    26,    27,    27,    27,    27,    27,
    27,    27,    27,    27,    27,   nil,    31,    27,    31,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31 ]

racc_action_pointer = [
   nil,     0,    69,   nil,   nil,   nil,   nil,     5,    70,     3,
   nil,    39,    26,    -2,   nil,   nil,    57,     0,   nil,   nil,
   nil,   nil,   nil,    -7,   nil,    17,    69,    82,   nil,   nil,
   -12,    94,    14,    56,   nil,    43,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,   nil,
   nil,    -7,   nil,   nil,   nil,    30,   nil ]

racc_action_default = [
    -1,   -49,   -49,    -2,    -3,    -4,    -5,   -49,    -8,   -49,
   -18,   -49,   -49,   -49,    67,    -6,   -10,   -49,   -15,   -16,
    -7,   -17,   -19,   -49,   -23,   -39,   -39,   -39,    -9,   -11,
   -13,   -49,   -49,   -39,   -25,   -39,   -33,   -34,   -35,   -36,
   -37,   -38,   -40,   -41,   -42,   -43,   -44,   -45,   -46,   -47,
   -48,   -26,   -27,   -12,   -14,   -20,   -21,   -49,   -24,   -28,
   -29,   -49,   -22,   -30,   -31,   -39,   -32 ]

racc_goto_table = [
    21,    59,    15,    34,    51,    52,    29,     7,     1,     6,
     5,    58,    32,    55,     4,     3,    63,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    54,   nil,   nil,   nil,
   nil,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    62 ]

racc_goto_check = [
    11,    18,     7,    15,    15,    15,     9,     6,     1,     5,
     4,    15,    13,    14,     3,     2,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11 ]

racc_goto_pointer = [
   nil,     8,    14,    13,     9,     8,     6,    -5,   nil,   -11,
   nil,    -9,   nil,   -11,   -19,   -22,   nil,   nil,   -34,   -45,
   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil,    17,   nil,
     9,   nil,    23,   nil,   nil,    61,    38,    35,   nil,   nil,
    37,    40,    41 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 20, :_reduce_none,
  2, 20, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  2, 22, :_reduce_none,
  2, 25, :_reduce_7,
  1, 25, :_reduce_8,
  2, 26, :_reduce_9,
  1, 26, :_reduce_10,
  2, 26, :_reduce_none,
  2, 28, :_reduce_12,
  1, 28, :_reduce_13,
  2, 28, :_reduce_none,
  1, 27, :_reduce_15,
  1, 27, :_reduce_16,
  2, 24, :_reduce_none,
  1, 29, :_reduce_18,
  1, 30, :_reduce_19,
  3, 30, :_reduce_none,
  1, 33, :_reduce_21,
  2, 33, :_reduce_none,
  1, 31, :_reduce_23,
  2, 32, :_reduce_none,
  3, 23, :_reduce_25,
  3, 23, :_reduce_26,
  3, 23, :_reduce_27,
  2, 35, :_reduce_none,
  1, 37, :_reduce_29,
  2, 37, :_reduce_none,
  1, 38, :_reduce_31,
  2, 38, :_reduce_none,
  1, 36, :_reduce_33,
  1, 34, :_reduce_34,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  0, 41, :_reduce_none,
  1, 41, :_reduce_40,
  1, 41, :_reduce_41,
  1, 41, :_reduce_42,
  1, 41, :_reduce_43,
  1, 41, :_reduce_44,
  1, 40, :_reduce_45,
  1, 40, :_reduce_46,
  1, 40, :_reduce_47,
  1, 40, :_reduce_48 ]

racc_reduce_n = 49

racc_shift_n = 67

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :STRING_MULTI => 3,
  :STRING_BASIC => 4,
  :STRING_LITERAL_MULTI => 5,
  :STRING_LITERAL => 6,
  :DATETIME => 7,
  :INTEGER => 8,
  :FLOAT => 9,
  :TRUE => 10,
  :FALSE => 11,
  "[" => 12,
  "]" => 13,
  "." => 14,
  "{" => 15,
  "}" => 16,
  "," => 17,
  "=" => 18 }

racc_nt_base = 19

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "STRING_MULTI",
  "STRING_BASIC",
  "STRING_LITERAL_MULTI",
  "STRING_LITERAL",
  "DATETIME",
  "INTEGER",
  "FLOAT",
  "TRUE",
  "FALSE",
  "\"[\"",
  "\"]\"",
  "\".\"",
  "\"{\"",
  "\"}\"",
  "\",\"",
  "\"=\"",
  "$start",
  "expressions",
  "expression",
  "table",
  "assignment",
  "inline_table",
  "table_start",
  "table_continued",
  "table_identifier",
  "table_next",
  "inline_table_start",
  "inline_continued",
  "inline_assignment_key",
  "inline_assignment_value",
  "inline_next",
  "value",
  "array",
  "start_array",
  "array_continued",
  "array_next",
  "scalar",
  "string",
  "literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_7(val, _values, result)
     @handler.start_(:array_of_tables) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_8(val, _values, result)
     @handler.start_(:table) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_9(val, _values, result)
     array = @handler.end_(:array_of_tables); @handler.set_context(array, is_array_of_tables: true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_10(val, _values, result)
     array = @handler.end_(:table); @handler.set_context(array) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_12(val, _values, result)
     array = @handler.end_(:array_of_tables); @handler.set_context(array, is_array_of_tables: true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_13(val, _values, result)
     array = @handler.end_(:table); @handler.set_context(array) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_15(val, _values, result)
     @handler.push(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_16(val, _values, result)
     @handler.push(val[0]) 
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_18(val, _values, result)
     @handler.start_(:inline) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_19(val, _values, result)
     array = @handler.end_(:inline); @handler.push(Hash[*array]) 
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_21(val, _values, result)
     array = @handler.end_(:inline); @handler.push(Hash[*array]) 
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_23(val, _values, result)
     @handler.push(val[0]) 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_25(val, _values, result)
     @handler.assign(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_26(val, _values, result)
     @handler.assign(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_27(val, _values, result)
     @handler.assign(val[0]) 
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_29(val, _values, result)
     array = @handler.end_(:array); @handler.push(array) 
    result
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_31(val, _values, result)
     array = @handler.end_(:array); @handler.push(array) 
    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_33(val, _values, result)
     @handler.start_(:array) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_34(val, _values, result)
     @handler.push(val[0]) 
    result
  end
.,.,

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_40(val, _values, result)
     result = val[0].to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_41(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_42(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_43(val, _values, result)
     result = false 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_44(val, _values, result)
     result = Time.new(*val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_45(val, _values, result)
     result = StringUtils.replace_escaped_chars(StringUtils.multiline_replacements(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_46(val, _values, result)
     result = StringUtils.replace_escaped_chars(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 90)
  def _reduce_47(val, _values, result)
     result = StringUtils.replace_escaped_chars(StringUtils.strip_spaces(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 91)
  def _reduce_48(val, _values, result)
     result = StringUtils.strip_spaces(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GeneratedParser
  end   # module Tomlrb
